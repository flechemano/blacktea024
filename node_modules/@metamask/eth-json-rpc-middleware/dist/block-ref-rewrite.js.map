{"version":3,"file":"block-ref-rewrite.js","sourceRoot":"","sources":["../src/block-ref-rewrite.ts"],"names":[],"mappings":";;;AACA,+DAAkE;AAIlE,yCAAmD;AAMnD,SAAgB,+BAA+B,CAAC,EAC9C,YAAY,MACwB,EAAE;IAItC,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,KAAK,CACT,yEAAyE,CAC1E,CAAC;KACH;IAED,OAAO,IAAA,uCAAqB,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;QACrD,MAAM,aAAa,GAAuB,IAAA,0BAAkB,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzE,2CAA2C;QAC3C,IAAI,aAAa,KAAK,SAAS,EAAE;YAC/B,OAAO,IAAI,EAAE,CAAC;SACf;QACD,uBAAuB;QACvB,MAAM,QAAQ,GACZ,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;YACpD,CAAC,CAAE,GAAG,CAAC,MAAM,CAAC,aAAa,CAAY;YACvC,CAAC,CAAC,oCAAoC;gBACpC,QAAQ,CAAC;QAEf,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACzB,OAAO,IAAI,EAAE,CAAC;SACf;QACD,mDAAmD;QACnD,MAAM,iBAAiB,GAAG,MAAM,YAAY,CAAC,cAAc,EAAE,CAAC;QAC9D,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC7B,kDAAkD;YAClD,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,iBAAiB,CAAC;SAC/C;QACD,OAAO,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC;AApCD,0EAoCC","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createAsyncMiddleware } from '@metamask/json-rpc-engine';\nimport type { Json, JsonRpcParams } from '@metamask/utils';\nimport type { PollingBlockTracker } from 'eth-block-tracker';\n\nimport { blockTagParamIndex } from './utils/cache';\n\ninterface BlockRefRewriteMiddlewareOptions {\n  blockTracker?: PollingBlockTracker;\n}\n\nexport function createBlockRefRewriteMiddleware({\n  blockTracker,\n}: BlockRefRewriteMiddlewareOptions = {}): JsonRpcMiddleware<\n  JsonRpcParams,\n  Json\n> {\n  if (!blockTracker) {\n    throw Error(\n      'BlockRefRewriteMiddleware - mandatory \"blockTracker\" option is missing.',\n    );\n  }\n\n  return createAsyncMiddleware(async (req, _res, next) => {\n    const blockRefIndex: number | undefined = blockTagParamIndex(req.method);\n    // skip if method does not include blockRef\n    if (blockRefIndex === undefined) {\n      return next();\n    }\n    // skip if not \"latest\"\n    const blockRef: string | undefined =\n      Array.isArray(req.params) && req.params[blockRefIndex]\n        ? (req.params[blockRefIndex] as string)\n        : // omitted blockRef implies \"latest\"\n          'latest';\n\n    if (blockRef !== 'latest') {\n      return next();\n    }\n    // rewrite blockRef to block-tracker's block number\n    const latestBlockNumber = await blockTracker.getLatestBlock();\n    if (Array.isArray(req.params)) {\n      // eslint-disable-next-line require-atomic-updates\n      req.params[blockRefIndex] = latestBlockNumber;\n    }\n    return next();\n  });\n}\n"]}