{"version":3,"file":"number.js","sourceRoot":"","sources":["../../../src/parsers/__fixtures__/number.ts"],"names":[],"mappings":"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","sourcesContent":["export const NUMBER_VECTORS = [\n  {\n    type: 'uint8',\n    value: BigInt('0'),\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000000000000000000000',\n  },\n  {\n    type: 'uint8',\n    value: BigInt('1'),\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000000000000000000001',\n  },\n  {\n    type: 'uint8',\n    value: BigInt('255'),\n    hexadecimal:\n      '0x00000000000000000000000000000000000000000000000000000000000000ff',\n  },\n  {\n    type: 'uint16',\n    value: BigInt('65535'),\n    hexadecimal:\n      '0x000000000000000000000000000000000000000000000000000000000000ffff',\n  },\n  {\n    type: 'uint32',\n    value: BigInt('4294967295'),\n    hexadecimal:\n      '0x00000000000000000000000000000000000000000000000000000000ffffffff',\n  },\n  {\n    type: 'uint64',\n    value: BigInt('18446744073709551615'),\n    hexadecimal:\n      '0x000000000000000000000000000000000000000000000000ffffffffffffffff',\n  },\n  {\n    type: 'uint128',\n    value: BigInt('340282366920938463463374607431768211455'),\n    hexadecimal:\n      '0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff',\n  },\n  {\n    type: 'uint256',\n    value: BigInt(\n      '115792089237316195423570985008687907853269984665640564039457584007913129639935',\n    ),\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  },\n  {\n    type: 'int8',\n    value: BigInt('-128'),\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80',\n  },\n  {\n    type: 'int8',\n    value: BigInt('127'),\n    hexadecimal:\n      '0x000000000000000000000000000000000000000000000000000000000000007f',\n  },\n  {\n    type: 'int16',\n    value: BigInt('-32768'),\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000',\n  },\n  {\n    type: 'int16',\n    value: BigInt('32767'),\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000000000000000007fff',\n  },\n  {\n    type: 'int32',\n    value: BigInt('-2147483648'),\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000',\n  },\n  {\n    type: 'int32',\n    value: BigInt('2147483647'),\n    hexadecimal:\n      '0x000000000000000000000000000000000000000000000000000000007fffffff',\n  },\n  {\n    type: 'int64',\n    value: BigInt('-9223372036854775808'),\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000',\n  },\n  {\n    type: 'int64',\n    value: BigInt('9223372036854775807'),\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000007fffffffffffffff',\n  },\n  {\n    type: 'int128',\n    value: BigInt('-170141183460469231731687303715884105728'),\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffff80000000000000000000000000000000',\n  },\n  {\n    type: 'int128',\n    value: BigInt('170141183460469231731687303715884105727'),\n    hexadecimal:\n      '0x000000000000000000000000000000007fffffffffffffffffffffffffffffff',\n  },\n  {\n    type: 'int256',\n    value: BigInt(\n      '-57896044618658097711785492504343953926634992332820282019728792003956564819968',\n    ),\n    hexadecimal:\n      '0x8000000000000000000000000000000000000000000000000000000000000000',\n  },\n  {\n    type: 'int256',\n    value: BigInt(\n      '57896044618658097711785492504343953926634992332820282019728792003956564819967',\n    ),\n    hexadecimal:\n      '0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  },\n];\n\nexport const DECODE_OUT_OF_RANGE_NUMBER_VECTORS = [\n  {\n    type: 'uint8',\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000000000000000000100',\n  },\n  {\n    type: 'uint16',\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000000000000000010000',\n  },\n  {\n    type: 'uint32',\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000000000000100000000',\n  },\n  {\n    type: 'uint64',\n    hexadecimal:\n      '0x0000000000000000000000000000000000000000000000010000000000000000',\n  },\n  {\n    type: 'uint128',\n    hexadecimal:\n      '0x0000000000000000000000000000000100000000000000000000000000000000',\n  },\n  {\n    type: 'int8',\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  },\n  {\n    type: 'int16',\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fff',\n  },\n  {\n    type: 'int32',\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffffffffffff7fffffff00000000',\n  },\n  {\n    type: 'int64',\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffffffffffff7fffffffffffffff00000000',\n  },\n  {\n    type: 'int128',\n    hexadecimal:\n      '0xffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffff',\n  },\n];\n\n// Values that are out of range for the given type.\nexport const OUT_OF_RANGE_NUMBER_VECTORS = [\n  {\n    type: 'uint256',\n    value: BigInt(2) ** BigInt(256),\n  },\n  {\n    type: 'uint8',\n    value: BigInt(2) ** BigInt(8),\n  },\n  {\n    type: 'int256',\n    value: BigInt(2) ** BigInt(255),\n  },\n  {\n    type: 'int256',\n    value: BigInt(2) ** BigInt(255) * BigInt(-1) - BigInt(1),\n  },\n  {\n    type: 'int8',\n    value: BigInt(2) ** BigInt(7),\n  },\n  {\n    type: 'int8',\n    value: BigInt(-2) ** BigInt(7) - BigInt(1),\n  },\n];\n\nexport const INVALID_NUMBER_TYPE_VECTORS = [\n  '',\n  'unt',\n  'iunt',\n  'array',\n  'bytes',\n  'string',\n  'bool',\n  'address',\n];\n"]}