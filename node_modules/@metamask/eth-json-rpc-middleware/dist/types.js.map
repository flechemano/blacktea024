{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport type { Json, JsonRpcParams, JsonRpcRequest } from '@metamask/utils';\n\nexport interface JsonRpcRequestToCache<Params extends JsonRpcParams>\n  extends JsonRpcRequest<Params> {\n  skipCache?: boolean;\n}\n\nexport type JsonRpcCacheMiddleware<\n  Params extends JsonRpcParams,\n  Result extends Json,\n> = JsonRpcMiddleware<Params, Result> extends (\n  req: JsonRpcRequest<Params>,\n  ...args: infer X\n) => infer Y\n  ? (req: JsonRpcRequestToCache<Params>, ...args: X) => Y\n  : never;\n\nexport type BlockData = string | string[];\n\nexport type Block = Record<string, BlockData>;\n\nexport type BlockCache = Record<string, Block>;\n\nexport type Cache = Record<number, BlockCache>;\n"]}